name: Update Shelter Data

on:
  # 毎週月曜日 3:00 JST (日曜日 18:00 UTC)
  schedule:
    - cron: '0 18 * * 0'
  # 手動実行を許可
  workflow_dispatch:
    inputs:
      data_file:
        description: 'Path to downloaded GeoJSON file (optional, for manual update)'
        required: false
        type: string

jobs:
  update-data:
    name: Update Shelter Data
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          # コミット履歴を取得してプッシュできるようにする
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check for manual data file
        id: check-file
        run: |
          if [ -n "${{ inputs.data_file }}" ]; then
            echo "manual_mode=true" >> $GITHUB_OUTPUT
            echo "data_file=${{ inputs.data_file }}" >> $GITHUB_OUTPUT
          else
            echo "manual_mode=false" >> $GITHUB_OUTPUT
          fi

      - name: Display manual download instructions
        if: steps.check-file.outputs.manual_mode == 'false'
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "📌 国土地理院からのデータ取得は手動ダウンロードが必要です"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""
          echo "⚠️  現在、国土地理院は避難所データの直接APIを提供していません。"
          echo ""
          echo "データ更新手順:"
          echo "1. https://hinanmap.gsi.go.jp/index.html にアクセス"
          echo "2. 徳島県 > 鳴門市を選択"
          echo "3. GeoJSON形式でダウンロード"
          echo "4. ダウンロードしたファイルをリポジトリに配置"
          echo "5. 以下のコマンドでワークフローを実行:"
          echo "   gh workflow run update-data.yml -f data_file=path/to/file.geojson"
          echo ""
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

      - name: Process downloaded data
        if: steps.check-file.outputs.manual_mode == 'true'
        run: |
          echo "Processing data from: ${{ steps.check-file.outputs.data_file }}"
          pnpm tsx scripts/fetch-shelters.ts "${{ steps.check-file.outputs.data_file }}"

      - name: Check for changes
        if: steps.check-file.outputs.manual_mode == 'true'
        id: git-check
        run: |
          git diff --exit-code public/data/shelters.geojson || echo "changed=true" >> $GITHUB_OUTPUT

      - name: Commit and push changes
        if: steps.check-file.outputs.manual_mode == 'true' && steps.git-check.outputs.changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add public/data/shelters.geojson
          git commit -m "chore(data): Update shelter data from 国土地理院

          Updated shelter data using automated workflow.
          Source: 国土地理院 避難所マップ

          🤖 Generated by GitHub Actions"
          git push

      - name: Create summary
        if: always()
        run: |
          echo "## 📊 Shelter Data Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.check-file.outputs.manual_mode }}" == "true" ]; then
            if [ "${{ steps.git-check.outputs.changed }}" == "true" ]; then
              echo "✅ **Status**: Data updated successfully" >> $GITHUB_STEP_SUMMARY
              echo "📅 **Updated**: $(date +'%Y-%m-%d %H:%M:%S %Z')" >> $GITHUB_STEP_SUMMARY
              echo "📦 **Source**: 国土地理院 避難所マップ" >> $GITHUB_STEP_SUMMARY
            else
              echo "ℹ️ **Status**: No changes detected" >> $GITHUB_STEP_SUMMARY
              echo "📅 **Checked**: $(date +'%Y-%m-%d %H:%M:%S %Z')" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "⚠️ **Status**: Manual download required" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### データ更新手順" >> $GITHUB_STEP_SUMMARY
            echo "1. [国土地理院 避難所マップ](https://hinanmap.gsi.go.jp/index.html) にアクセス" >> $GITHUB_STEP_SUMMARY
            echo "2. 徳島県 > 鳴門市を選択" >> $GITHUB_STEP_SUMMARY
            echo "3. GeoJSON形式でダウンロード" >> $GITHUB_STEP_SUMMARY
            echo "4. ダウンロードしたファイルを使用してワークフローを再実行" >> $GITHUB_STEP_SUMMARY
          fi
